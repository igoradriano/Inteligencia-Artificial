# -*- coding: utf-8 -*-
"""Cópia de Fuzzy - Exemplo gorgetas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15DlDMXPo-4PEQ9NlABHglHcJVypdg3_-

# Fuzzy - exemplo das gorgetas

**Antecedentes (entradas)**

Serviço: que nota você daria para o serviço, em uma escala de 0 a 10?
- ruim, aceitável, ótimo

Qualidade da comida: quão boa estava a comida, em uma escala de 0 a 10?
- ruim, boa, saborosa

**Consequentes (saídas)**

Gorjeta: quanta gorjeta você daria, entre 0% e 20%?
- baixa, média, alta

Regras
- Se a qualidade da comida for *ruim* ou o serviço for *ruim* então a gorjeta será *baixa*
- Se o serviço for *médio* então a gorjeta será *média*
- Se o serviço for *bom* e a qualidade da comida for *saborosa* então a gorjeta será *alta*

## Instalação e importação das bibliotecas
"""
#!pip install scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl


"""## Antecedentes e consequente"""

np.arange(0, 11, 1)

qualidade = ctrl.Antecedent(np.arange(0, 11, 1), 'qualidade')
servico = ctrl.Antecedent(np.arange(0, 11, 1), 'servico')
gorjeta = ctrl.Consequent(np.arange(0, 21, 1), 'gorjeta')

"""## Membership functions"""

qualidade.automf(number=3, names=['ruim', 'boa', 'saborosa']) #number = 3, temos 3 valores possíveis para a divisão das notas
servico.automf(number=3, names=['ruim', 'aceitável', 'ótimo'])

qualidade.view()
qualidade['saborosa'].view()
servico.view()



gorjeta['baixa'] = fuzz.trimf(gorjeta.universe, [0, 0, 9]) #trimf - funcao triangular, vamos passar os valores do triangulo
gorjeta['media'] = fuzz.trimf(gorjeta.universe, [5, 10, 15])
gorjeta['alta'] = fuzz.trimf(gorjeta.universe, [11, 20, 20])

gorjeta.view()

regra1 = ctrl.Rule(qualidade['ruim'] | servico['ruim'], gorjeta['baixa'])  # | -> OU & -> E
regra2 = ctrl.Rule(servico['aceitável'], gorjeta['media'])
regra3 = ctrl.Rule(servico['ótimo'] | qualidade['saborosa'], gorjeta['alta'])

"""## Sistema de controle"""

sistema_controle = ctrl.ControlSystem([regra1, regra2, regra3])

sistema = ctrl.ControlSystemSimulation(sistema_controle) #para simular o sistema que criamos

sistema.input['qualidade'] = 10
sistema.input['servico'] = 10
sistema.compute()

print(sistema.output['gorjeta'])
gorjeta.view(sim = sistema) #sim -> sistema